// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}


model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String
  role          Role      @default(user)
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  //Relations and Indexes
 
}

enum TipoCliente {
  FISICA
  JURIDICA
}

model Cliente {
  id         String     @id @default(uuid())
  nome       String
  tipo       TipoCliente
  documento  String
  email      String     @unique
  telefone   String
  endereco   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  contatos   Contato[]
  pedidosRemetente   Pedido[] @relation("Remetente")
  pedidosDestinatario Pedido[] @relation("Destinatario")
}



model Contato {
  id           String   @id @default(uuid())
  nome         String
  email        String
  telefone     String
  departamento String?
  clienteId    String
  cliente      Cliente  @relation(fields: [clienteId], references: [id], onDelete: Cascade)
}

model Pedido {
  id              String   @id @default(uuid())
  codigoRastreamento String @unique
  descricao       String
  peso            Float
  dimensoes       String
  valorMercadoria Float
  tipoEntrega     TipoEntrega
  status          StatusPedido @default(AGUARDANDO_COLETA)
  observacoes     String?
  enderecoColeta  String
  enderecoEntrega String
  remetenteId     String
  destinatarioId  String

  remetente       Cliente @relation("Remetente", fields: [remetenteId], references: [id])
  destinatario    Cliente @relation("Destinatario", fields: [destinatarioId], references: [id])

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

enum TipoEntrega {
  NORMAL
  EXPRESSA
  AGENDADA
}

enum StatusPedido {
  AGUARDANDO_COLETA
  EM_TRANSITO
  ENTREGUE
  DEVOLVIDO
}

model Motorista {
  id            String   @id @default(uuid())
  nome          String
  cpf           String   @unique
  telefone      String
  email         String?
  categoriaCnh  CategoriaCnh
  numeroCnh     String
  validadeCnh   DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum CategoriaCnh {
  A
  B
  C
  D
  E
}



